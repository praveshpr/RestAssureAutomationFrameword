<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="6" ignored="0" total="42" passed="36">
  <reporter-output>
  </reporter-output>
  <suite name="employeeSuite" duration-ms="11763" started-at="2020-02-23T03:16:13Z" finished-at="2020-02-23T03:16:24Z">
    <groups>
    </groups>
    <test name="employeeTest" duration-ms="11763" started-at="2020-02-23T03:16:13Z" finished-at="2020-02-23T03:16:24Z">
      <class name="com.au.testCases.TC003_Post_Employee_record">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.au.testCases.TC003_Post_Employee_record@1794d431]" name="setUp" is-config="true" duration-ms="2" started-at="2020-02-23T03:16:21Z" finished-at="2020-02-23T03:16:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="createEmployee()[pri:0, instance:com.au.testCases.TC003_Post_Employee_record@1794d431]" name="createEmployee" is-config="true" duration-ms="724" started-at="2020-02-23T03:16:21Z" finished-at="2020-02-23T03:16:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEmployee -->
        <test-method status="PASS" signature="checkBodyResponse()[pri:0, instance:com.au.testCases.TC003_Post_Employee_record@1794d431]" name="checkBodyResponse" duration-ms="2" started-at="2020-02-23T03:16:22Z" finished-at="2020-02-23T03:16:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBodyResponse -->
        <test-method status="PASS" signature="checkContentLength()[pri:0, instance:com.au.testCases.TC003_Post_Employee_record@1794d431]" name="checkContentLength" duration-ms="1" started-at="2020-02-23T03:16:22Z" finished-at="2020-02-23T03:16:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.au.testCases.TC003_Post_Employee_record@1794d431]" name="checkContentType" duration-ms="1" started-at="2020-02-23T03:16:22Z" finished-at="2020-02-23T03:16:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:com.au.testCases.TC003_Post_Employee_record@1794d431]" name="checkResponseTime" duration-ms="1" started-at="2020-02-23T03:16:22Z" finished-at="2020-02-23T03:16:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="checkServerType()[pri:0, instance:com.au.testCases.TC003_Post_Employee_record@1794d431]" name="checkServerType" duration-ms="1" started-at="2020-02-23T03:16:22Z" finished-at="2020-02-23T03:16:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.au.testCases.TC003_Post_Employee_record@1794d431]" name="checkStatusCode" duration-ms="1" started-at="2020-02-23T03:16:22Z" finished-at="2020-02-23T03:16:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.au.testCases.TC003_Post_Employee_record@1794d431]" name="checkStatusLine" duration-ms="1" started-at="2020-02-23T03:16:22Z" finished-at="2020-02-23T03:16:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="checkcookies()[pri:0, instance:com.au.testCases.TC003_Post_Employee_record@1794d431]" name="checkcookies" duration-ms="1" started-at="2020-02-23T03:16:22Z" finished-at="2020-02-23T03:16:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkcookies -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.au.testCases.TC003_Post_Employee_record@1794d431]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-02-23T03:16:22Z" finished-at="2020-02-23T03:16:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.au.testCases.TC003_Post_Employee_record -->
      <class name="com.au.testCases.TC004_Put_Employee_record">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.au.testCases.TC004_Put_Employee_record@42e26948]" name="setUp" is-config="true" duration-ms="2" started-at="2020-02-23T03:16:22Z" finished-at="2020-02-23T03:16:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="updateEmployee()[pri:0, instance:com.au.testCases.TC004_Put_Employee_record@42e26948]" name="updateEmployee" is-config="true" duration-ms="777" started-at="2020-02-23T03:16:22Z" finished-at="2020-02-23T03:16:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateEmployee -->
        <test-method status="FAIL" signature="checkBodyResponse()[pri:0, instance:com.au.testCases.TC004_Put_Employee_record@42e26948]" name="checkBodyResponse" duration-ms="2" started-at="2020-02-23T03:16:23Z" finished-at="2020-02-23T03:16:23Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at com.au.testCases.TC004_Put_Employee_record.checkBodyResponse(TC004_Put_Employee_record.java:50)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBodyResponse -->
        <test-method status="FAIL" signature="checkContentLength()[pri:0, instance:com.au.testCases.TC004_Put_Employee_record@42e26948]" name="checkContentLength" duration-ms="2" started-at="2020-02-23T03:16:23Z" finished-at="2020-02-23T03:16:23Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.au.testCases.TC004_Put_Employee_record.checkContentLength(TC004_Put_Employee_record.java:117)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.au.testCases.TC004_Put_Employee_record@42e26948]" name="checkContentType" duration-ms="1" started-at="2020-02-23T03:16:23Z" finished-at="2020-02-23T03:16:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:com.au.testCases.TC004_Put_Employee_record@42e26948]" name="checkResponseTime" duration-ms="1" started-at="2020-02-23T03:16:23Z" finished-at="2020-02-23T03:16:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="checkServerType()[pri:0, instance:com.au.testCases.TC004_Put_Employee_record@42e26948]" name="checkServerType" duration-ms="1" started-at="2020-02-23T03:16:23Z" finished-at="2020-02-23T03:16:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.au.testCases.TC004_Put_Employee_record@42e26948]" name="checkStatusCode" duration-ms="0" started-at="2020-02-23T03:16:23Z" finished-at="2020-02-23T03:16:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.au.testCases.TC004_Put_Employee_record@42e26948]" name="checkStatusLine" duration-ms="1" started-at="2020-02-23T03:16:23Z" finished-at="2020-02-23T03:16:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="checkcookies()[pri:0, instance:com.au.testCases.TC004_Put_Employee_record@42e26948]" name="checkcookies" duration-ms="1" started-at="2020-02-23T03:16:23Z" finished-at="2020-02-23T03:16:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkcookies -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.au.testCases.TC004_Put_Employee_record@42e26948]" name="tearDown" is-config="true" duration-ms="1" started-at="2020-02-23T03:16:23Z" finished-at="2020-02-23T03:16:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.au.testCases.TC004_Put_Employee_record -->
      <class name="com.au.testCases.TC001_Get_All_Employees">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.au.testCases.TC001_Get_All_Employees@7d9d1a19]" name="setUp" is-config="true" duration-ms="9" started-at="2020-02-23T03:16:13Z" finished-at="2020-02-23T03:16:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getAllEmployees()[pri:0, instance:com.au.testCases.TC001_Get_All_Employees@7d9d1a19]" name="getAllEmployees" is-config="true" duration-ms="2350" started-at="2020-02-23T03:16:13Z" finished-at="2020-02-23T03:16:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method status="PASS" signature="checkBodyResponse()[pri:0, instance:com.au.testCases.TC001_Get_All_Employees@7d9d1a19]" name="checkBodyResponse" duration-ms="23" started-at="2020-02-23T03:16:15Z" finished-at="2020-02-23T03:16:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBodyResponse -->
        <test-method status="PASS" signature="checkContentEncoding()[pri:0, instance:com.au.testCases.TC001_Get_All_Employees@7d9d1a19]" name="checkContentEncoding" duration-ms="1" started-at="2020-02-23T03:16:15Z" finished-at="2020-02-23T03:16:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentEncoding -->
        <test-method status="PASS" signature="checkContentLength()[pri:0, instance:com.au.testCases.TC001_Get_All_Employees@7d9d1a19]" name="checkContentLength" duration-ms="0" started-at="2020-02-23T03:16:15Z" finished-at="2020-02-23T03:16:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.au.testCases.TC001_Get_All_Employees@7d9d1a19]" name="checkContentType" duration-ms="2" started-at="2020-02-23T03:16:15Z" finished-at="2020-02-23T03:16:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="FAIL" signature="checkResponseTime()[pri:0, instance:com.au.testCases.TC001_Get_All_Employees@7d9d1a19]" name="checkResponseTime" duration-ms="2" started-at="2020-02-23T03:16:15Z" finished-at="2020-02-23T03:16:15Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.au.testCases.TC001_Get_All_Employees.checkResponseTime(TC001_Get_All_Employees.java:55)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="checkServerType()[pri:0, instance:com.au.testCases.TC001_Get_All_Employees@7d9d1a19]" name="checkServerType" duration-ms="2" started-at="2020-02-23T03:16:15Z" finished-at="2020-02-23T03:16:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.au.testCases.TC001_Get_All_Employees@7d9d1a19]" name="checkStatusCode" duration-ms="2" started-at="2020-02-23T03:16:15Z" finished-at="2020-02-23T03:16:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.au.testCases.TC001_Get_All_Employees@7d9d1a19]" name="checkStatusLine" duration-ms="3" started-at="2020-02-23T03:16:15Z" finished-at="2020-02-23T03:16:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="checkcookies()[pri:0, instance:com.au.testCases.TC001_Get_All_Employees@7d9d1a19]" name="checkcookies" duration-ms="2" started-at="2020-02-23T03:16:15Z" finished-at="2020-02-23T03:16:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkcookies -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.au.testCases.TC001_Get_All_Employees@7d9d1a19]" name="tearDown" is-config="true" duration-ms="1" started-at="2020-02-23T03:16:15Z" finished-at="2020-02-23T03:16:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.au.testCases.TC001_Get_All_Employees -->
      <class name="com.au.testCases.TC002_Get_Single_Employees">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.au.testCases.TC002_Get_Single_Employees@39c0f4a]" name="setUp" is-config="true" duration-ms="2" started-at="2020-02-23T03:16:15Z" finished-at="2020-02-23T03:16:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getAllEmployees()[pri:0, instance:com.au.testCases.TC002_Get_Single_Employees@39c0f4a]" name="getAllEmployees" is-config="true" duration-ms="5730" started-at="2020-02-23T03:16:15Z" finished-at="2020-02-23T03:16:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method status="PASS" signature="checkBodyResponse()[pri:0, instance:com.au.testCases.TC002_Get_Single_Employees@39c0f4a]" name="checkBodyResponse" duration-ms="6" started-at="2020-02-23T03:16:21Z" finished-at="2020-02-23T03:16:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBodyResponse -->
        <test-method status="PASS" signature="checkContentEncoding()[pri:0, instance:com.au.testCases.TC002_Get_Single_Employees@39c0f4a]" name="checkContentEncoding" duration-ms="1" started-at="2020-02-23T03:16:21Z" finished-at="2020-02-23T03:16:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentEncoding -->
        <test-method status="PASS" signature="checkContentLength()[pri:0, instance:com.au.testCases.TC002_Get_Single_Employees@39c0f4a]" name="checkContentLength" duration-ms="0" started-at="2020-02-23T03:16:21Z" finished-at="2020-02-23T03:16:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.au.testCases.TC002_Get_Single_Employees@39c0f4a]" name="checkContentType" duration-ms="0" started-at="2020-02-23T03:16:21Z" finished-at="2020-02-23T03:16:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="FAIL" signature="checkResponseTime()[pri:0, instance:com.au.testCases.TC002_Get_Single_Employees@39c0f4a]" name="checkResponseTime" duration-ms="1" started-at="2020-02-23T03:16:21Z" finished-at="2020-02-23T03:16:21Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.au.testCases.TC002_Get_Single_Employees.checkResponseTime(TC002_Get_Single_Employees.java:61)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="FAIL" signature="checkServerType()[pri:0, instance:com.au.testCases.TC002_Get_Single_Employees@39c0f4a]" name="checkServerType" duration-ms="1" started-at="2020-02-23T03:16:21Z" finished-at="2020-02-23T03:16:21Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [nginx/1.14.1] but found [nginx/1.16.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [nginx/1.14.1] but found [nginx/1.16.0]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.au.testCases.TC002_Get_Single_Employees.checkServerType(TC002_Get_Single_Employees.java:89)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.au.testCases.TC002_Get_Single_Employees@39c0f4a]" name="checkStatusCode" duration-ms="1" started-at="2020-02-23T03:16:21Z" finished-at="2020-02-23T03:16:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.au.testCases.TC002_Get_Single_Employees@39c0f4a]" name="checkStatusLine" duration-ms="1" started-at="2020-02-23T03:16:21Z" finished-at="2020-02-23T03:16:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="checkcookies()[pri:0, instance:com.au.testCases.TC002_Get_Single_Employees@39c0f4a]" name="checkcookies" duration-ms="1" started-at="2020-02-23T03:16:21Z" finished-at="2020-02-23T03:16:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkcookies -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.au.testCases.TC002_Get_Single_Employees@39c0f4a]" name="tearDown" is-config="true" duration-ms="1" started-at="2020-02-23T03:16:21Z" finished-at="2020-02-23T03:16:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.au.testCases.TC002_Get_Single_Employees -->
      <class name="com.au.testCases.TC005_Delete_Employee_record">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.au.testCases.TC005_Delete_Employee_record@57baeedf]" name="setUp" is-config="true" duration-ms="1" started-at="2020-02-23T03:16:23Z" finished-at="2020-02-23T03:16:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="updateEmployee()[pri:0, instance:com.au.testCases.TC005_Delete_Employee_record@57baeedf]" name="updateEmployee" is-config="true" duration-ms="1818" started-at="2020-02-23T03:16:23Z" finished-at="2020-02-23T03:16:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateEmployee -->
        <test-method status="FAIL" signature="checkBodyResponse()[pri:0, instance:com.au.testCases.TC005_Delete_Employee_record@57baeedf]" name="checkBodyResponse" duration-ms="1" started-at="2020-02-23T03:16:24Z" finished-at="2020-02-23T03:16:24Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at com.au.testCases.TC005_Delete_Employee_record.checkBodyResponse(TC005_Delete_Employee_record.java:46)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBodyResponse -->
        <test-method status="PASS" signature="checkContentLength()[pri:0, instance:com.au.testCases.TC005_Delete_Employee_record@57baeedf]" name="checkContentLength" duration-ms="1" started-at="2020-02-23T03:16:24Z" finished-at="2020-02-23T03:16:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.au.testCases.TC005_Delete_Employee_record@57baeedf]" name="checkContentType" duration-ms="1" started-at="2020-02-23T03:16:24Z" finished-at="2020-02-23T03:16:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:com.au.testCases.TC005_Delete_Employee_record@57baeedf]" name="checkResponseTime" duration-ms="1" started-at="2020-02-23T03:16:24Z" finished-at="2020-02-23T03:16:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="checkServerType()[pri:0, instance:com.au.testCases.TC005_Delete_Employee_record@57baeedf]" name="checkServerType" duration-ms="1" started-at="2020-02-23T03:16:24Z" finished-at="2020-02-23T03:16:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.au.testCases.TC005_Delete_Employee_record@57baeedf]" name="checkStatusCode" duration-ms="1" started-at="2020-02-23T03:16:24Z" finished-at="2020-02-23T03:16:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.au.testCases.TC005_Delete_Employee_record@57baeedf]" name="checkStatusLine" duration-ms="1" started-at="2020-02-23T03:16:24Z" finished-at="2020-02-23T03:16:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="checkcookies()[pri:0, instance:com.au.testCases.TC005_Delete_Employee_record@57baeedf]" name="checkcookies" duration-ms="1" started-at="2020-02-23T03:16:24Z" finished-at="2020-02-23T03:16:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkcookies -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.au.testCases.TC005_Delete_Employee_record@57baeedf]" name="tearDown" is-config="true" duration-ms="1" started-at="2020-02-23T03:16:24Z" finished-at="2020-02-23T03:16:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.au.testCases.TC005_Delete_Employee_record -->
    </test> <!-- employeeTest -->
  </suite> <!-- employeeSuite -->
</testng-results>
